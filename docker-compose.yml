version: '1.0'
services:
  database:
    image: postgres:16.3
    restart: always
    ports:
      - '3333:5432'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      - base-network
    container_name: database
    volumes:
      - nps_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 30s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    networks:
      - base-network
    container_name: redis
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 30s
      retries: 5

  app:
    build:
      context: ./
      dockerfile: ./Dockerfile.dev
    container_name: app
    env_file:
      - ./.env
    ports:
      - '8000:8000'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - DB_HOST=database
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - base-network
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
volumes:
  nps_data: {}
  redis_data: {}
networks:
  base-network:
